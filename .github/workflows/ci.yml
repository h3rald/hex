name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "ci"
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os:
              - ubuntu-latest
              - macos-latest
              - windows-latest
              - macos-13

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Build
        run: make

      - name: Test
        run: make test

      # Install cosmocc
      - name: Install cosmocc
        run: |
          mkdir -p $HOME/cosmocc
          cd $HOME/cosmocc
          wget -q https://cosmo.zip/pub/cosmocc/cosmocc.zip
          unzip -q cosmocc.zip
          pwd
          ls -l
        if: matrix.os == 'ubuntu-latest'

      # Add cosmocc to PATH + see https://redbean.dev/#install
      - name: Add cosmocc to PATH
        run: |
          echo $HOME/cosmocc/bin >> $GITHUB_PATH
          sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
          sudo chmod +x /usr/bin/ape
          sudo sh -c "echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"
          sudo sh -c "echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"
        if: matrix.os == 'ubuntu-latest'

      # Generate APE binary
      - name: Generate APE binary
        run: |
          mv hex hex.native
          make ape
        if: matrix.os == 'ubuntu-latest'
        
      # Run tests with APE binary
      - name: Test (APE)
        run: |
          make test
        if: matrix.os == 'ubuntu-latest'
